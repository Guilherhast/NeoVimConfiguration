"""
This type stub file was generated by pyright.
"""

def distance(a, b):
    """Compute the distance between a and b.

    This is based on Damerau-Levenshtein distance, but we modify the cost
    of some edits, like insertion or removal of '_', or capitalisation changes.

    """
    ...

def suggest(word, candidates): # -> list[Any]:
    """Suggest good candidates as corrections for the given word.

    Suggestions will be ordered from best to worst.

    """
    ...

def compare(have, want): # -> Generator[tuple[Any, Any], Any, None]:
    """Compare a set of names we have (from user input) to those we want.

    This is a greedy algorithm that will take the best answer for each word
    in have in turn.

    """
    ...

HOOKS = ...
CONSTS = ...
VALID_PARAMS = ...
class InvalidParameter(Exception):
    """A parameter to a hook was invalid."""
    ...


class SpellCheckResult:
    def warn(self, msg, found, suggestion): # -> None:
        ...
    
    def error(self, msg, found, suggestion):
        ...
    


def spellcheck(namespace, result=...): # -> None:
    """Spell check the names in the given module.

    Where hooks are found, validate their positional parameters and offer
    suggestions where mispelled.

    """
    ...

